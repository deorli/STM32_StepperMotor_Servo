################################################################################################
#   File           : config_Makefile
#   Brief          : This file contains simple system for software building
#					 with flashing process for SMT32F3 microcontroller
#					 along with static analisis.
#	############################################################################################
#   Copyright (c) Bator Mateusz 
#   email: deorli@o2.pl
#   
#   All rights reserved.
#   
#   This software is licensed under terms that can be found in the LICENSE file
#   in the root directory of this software project.
################################################################################################

######################################### ↓ Includes ↓ #########################################
include Makefiles/config_Makefile
include Core/Makefile

######################################### ↓ Variables ↓ ########################################
# Application name
TARGET = stepper_servo

ifeq ($(MAKECMDGOALS),$(filter $(MAKECMDGOALS), DebugApp DebugApp-flash clean-DebugApp))
BUILD_DIR = .build_debug
else
BUILD_DIR = .build
endif

# Flags to add debug information in out files
ifeq ($(MAKECMDGOALS),$(filter $(MAKECMDGOALS), DebugApp DebugApp-flash))
CFLAGS += -g -gdwarf-2
endif

# List of C objects files
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))

# List of ASM objects files
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

########################################### ↓ Rules ↓ ##########################################
# Create an object file from soruce files
$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

# Create an object file from ASM files
$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

# Build .elf file
$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

# Build .hex file from .elf
$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

# Build .bin file from .elf
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	

$(BUILD_DIR):
	mkdir $@

# Headers
print_compilation_start: 
	@echo
	@echo	  '############################    START COMPILATION    ############################'

print_clean_start: 
	@echo
	@echo	  '###############################    CLEAN BUILD    ###############################'

print_flash_start: 
	@echo
	@echo	  '##########################   FLASHING PROSESS START    ##########################'

print_cppcheck_start:
	@echo
	@echo	  '#############################    STATIC ANALISIS    #############################'

######################################### ↓  Main Rules ↓ #######################################

# Deletion of compilation files
clean-App clean-DebugApp: print_clean_start
	-rm -fR $(BUILD_DIR)

# Application compilation without and with debugging information
App DebugApp: print_compilation_start $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).bin

# Flash application without debugging information
App-flash: clean-App App flash-process reset 

# Flash application with debugging information
flash-debug: clean-debug debug flash-process reset

# Flash process
flash-process: print_flash_start
	openocd \
	-f interface/stlink.cfg -f target/stm32f3x.cfg \
	-c "init" -c "reset halt" \
	-c "flash write_image erase $(BUILD_DIR)/$(TARGET).bin 0x08000000" \
	-c "verify_image $(BUILD_DIR)/$(TARGET).bin" -c "reset" -c "shutdown"

# Microcontroller reset
reset:
	openocd \
	-f interface/stlink.cfg -f target/stm32f3x.cfg \
	-c "init" -c "reset" -c "shutdown"

cppcheck: cppcheck-process

# TODO
#1. Add header files to cppcheck

# Static analysis using cppcheck 
cppcheck-process: print_cppcheck_start
	@$(CPPCHECK) \
	--platform=win64 \
	--force \
	--quiet --enable=all \
	--error-exitcode=1 \
	--inline-suppr \
	--suppress=missingIncludeSystem \
	-I '$(ROOT_DIR)/Core/STM32F303x8' \
	-I '$(ROOT_DIR)/Core/Inc' \
	$(C_SOURCES)